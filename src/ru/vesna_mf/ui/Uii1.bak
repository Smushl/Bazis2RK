package ru.vesna_mf.ui;

import ru.vesna_mf.logic.FileAmount;
import ru.vesna_mf.logic.Order;

import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Collections;

/**
 * Created by Admin on 07.11.15.
 */


/*
Список измерений:

16/11/2015
в detail добавил equals, что позволило объединять одинаковые детали
добавил выдачу списка радиусных деталей
добавил кнопочку ClearAll
17/11/2015
добавлен доп. Tab между материалом и размерами в R-списке для корректной вставки в excel


TODO

- надо разобраться как присобачить иконку, чтоб она у JARа тоже была
ресурсы там использовать как-то чтоли
- базис на две одинаковые радиусные детали может нарисовать одинаковую кромку!
подумать как быть со столешками детских кухонь с вырезом под тазик, можно ли что-то с ними сделать
(как вариант, вручную править txt и перед кромкой ставить *)

*/

public class Uii1 extends JFrame{
    private ArrayList<File> files = new ArrayList<File>();
    private ArrayList<FileAmount> fileAmounts;
    JTable table;
    DefaultTableModel dtm;
    JFileChooser fileOpenDialog;
    JButton addButton;
    JButton makeOrderButton;
    JButton clearButton;
    JButton removeLastOne;
    JTextField orderName;
    JTextArea text;
    JTabbedPane tabbedPane;
    JLabel statusLabel;
    public Uii1() {
        super("JFrame_1");
        try{
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch (Exception ex){
            ex.printStackTrace();
        }
//        cli_bombus.ico
//        setIconImage();
        ImageIcon image = new ImageIcon("cli_bombus.i.png");
        setIconImage(image.getImage());
        setSize(800, 500);
        setLocation(400, 250);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
//-----------------Text Area-------------------------------
        text = new JTextArea();
        text.setFont(new Font("", Font.PLAIN, 14));
        text.setEditable(false);
//---------------File Open Dialog--------------------------
        fileOpenDialog = new JFileChooser();
        fileOpenDialog.setFileFilter(new FileNameExtensionFilter("Text Files", "txt"));
        fileOpenDialog.setAcceptAllFileFilterUsed(false);
        fileOpenDialog.setMultiSelectionEnabled(true);   //добавляем возможность выбора нескольких файлов

//-----------КНОПОЧКИ---------------------------------
        Box bx = new Box(BoxLayout.Y_AXIS);

        addButton = new JButton("Add");
        addButton.addActionListener(e -> {
            if (fileOpenDialog.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                Collections.addAll(files, fileOpenDialog.getSelectedFiles());
            }
            for (int i = files.size() - fileOpenDialog.getSelectedFiles().length; i < files.size(); i++) {
                String s1 = files.get(i).getName().substring(0, files.get(i).getName().length() - 4);
                dtm.addRow(new String[]{String.valueOf(dtm.getRowCount() + 1), s1, "1"});
            }
        });
        bx.add(addButton);

        bx.add(Box.createVerticalStrut(5));

        makeOrderButton = new JButton("Make Order");
        makeOrderButton.addActionListener(e -> {        //для проверки
            // нумерование строк и столбцов таблицы начинается от 0!
            System.out.println("-------------------");
            fileAmounts = new ArrayList<>();
            for (int i = 0; i < files.size(); i++) {

                String s1 = (String) table.getValueAt(i, 2);
                boolean add = fileAmounts.add(new FileAmount(files.get(i), Integer.parseInt(s1)));
                System.out.println(table.getValueAt(i, 0) + "   " + files.get(i).getName() + "   " + table.getValueAt(i, 2) + " шт  ->  " + add);


            }
            Order order = new Order(orderName.getText(), fileAmounts);
            try {
                order.makeRaskroyFile();
                order.makeCurveDetailFile();
                statusLabel.setText("Success!");
            } catch (Exception ex) {
                statusLabel.setText("Something Wrong!");
            }


        });

        bx.add(makeOrderButton);
        bx.add(Box.createVerticalStrut(5));

        removeLastOne = new JButton("Remove Last");
        removeLastOne.addActionListener(e -> {
                    if (dtm.getRowCount() > 0) {
                        dtm.removeRow(dtm.getRowCount() - 1);
                        files.remove(files.size() - 1);
                    }
                }
        );

        bx.add(removeLastOne);
        bx.add(Box.createVerticalStrut(5));

        clearButton = new JButton("Clear All");
        clearButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                files = new ArrayList<File>();
                dtm.setNumRows(0);
            }
        });
        bx.add(clearButton);
        bx.add(Box.createVerticalStrut(5));

        bx.add(Box.createVerticalGlue());

        JButton exitButton = new JButton("Exit");
        exitButton.addActionListener(e -> System.exit(0));
        exitButton.setForeground(Color.blue);
        bx.add(exitButton);

        bx.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
//-------------------- Создание Таблицы------------------------
        dtm = new DefaultTableModel();
        dtm.setColumnIdentifiers(new String[]{"№", "Изделие", "Количество"});
        table = new JTable(dtm);
        table.getColumnModel().getColumn(2).setMaxWidth(100);
        table.getColumnModel().getColumn(0).setMaxWidth(30);
        table.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                try {
                    ArrayList<String> list = (ArrayList<String>) Files.readAllLines(files.get(table.getSelectedRow()).toPath(), Charset.defaultCharset());
                    text.setText("");
                    for (String s : list){
                        text.append(s+"\n");
                    }
                } catch (IOException e1) {
                    e1.printStackTrace();
                }
            }

            @Override
            public void mousePressed(MouseEvent e) {

            }

            @Override
            public void mouseReleased(MouseEvent e) {

            }

            @Override
            public void mouseEntered(MouseEvent e) {
                //действие при наведении мыши
                //нужно найти обработчик двойного клика мыши и повестить на него tabbedPane.setSelectedIndex(1);

            }

            @Override
            public void mouseExited(MouseEvent e) {

            }
        });
//-------------------------------------------------------------

        JPanel pane1 = new JPanel(new BorderLayout());
        pane1.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
        tabbedPane = new JTabbedPane();
        tabbedPane.addTab("Files", new JScrollPane(table));
        tabbedPane.addTab("Details", new JScrollPane(text));

        pane1.add(tabbedPane, BorderLayout.CENTER);
        pane1.add(bx, BorderLayout.EAST);

        orderName = new JTextField("Название заказа");
        pane1.add(orderName, BorderLayout.NORTH);

        statusLabel = new JLabel("Add Files");
        pane1.add(statusLabel, BorderLayout.SOUTH);


        setContentPane(pane1);

        setVisible(true);
    }

    public static void main(String[] args) {
        new Uii1();
    }
}
